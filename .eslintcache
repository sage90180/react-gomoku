[{"/Users/sage/Desktop/五子棋/src/index.js":"1","/Users/sage/Desktop/五子棋/src/globalStyle.js":"2","/Users/sage/Desktop/五子棋/src/App.js":"3","/Users/sage/Desktop/五子棋/src/Chess.js":"4","/Users/sage/Desktop/五子棋/src/Button.js":"5","/Users/sage/Desktop/五子棋/src/utils.js":"6"},{"size":262,"mtime":1609914618299,"results":"7","hashOfConfig":"8"},{"size":1743,"mtime":1609914566997,"results":"9","hashOfConfig":"8"},{"size":6284,"mtime":1610517194437,"results":"10","hashOfConfig":"8"},{"size":1872,"mtime":1610172586321,"results":"11","hashOfConfig":"8"},{"size":425,"mtime":1610421714435,"results":"12","hashOfConfig":"8"},{"size":1023,"mtime":1610068513147,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"nv2u5t",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/sage/Desktop/五子棋/src/index.js",[],["28","29"],"/Users/sage/Desktop/五子棋/src/globalStyle.js",[],"/Users/sage/Desktop/五子棋/src/App.js",["30","31"],"import React, { useState, useCallback, useRef, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { findWinner } from \"./utils\";\n\nimport Chess from \"./Chess\";\nimport Button from \"./Button\";\n\nconst WinnerModal = styled.div`\n  position: absolute;\n  background: rgba(0, 0, 0, 0.4);\n  left: 0px;\n  right: 0px;\n  top: 0px;\n  bottom: 0px;\n  z-index: 999;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  button {\n    background: rgba(255, 255, 255, 0.2);\n    margin-top: 20px;\n    font-size: 18px;\n    font-weight: 500;\n    border: solid 2px white;\n    padding: 3px 10px;\n    letter-spacing: 2px;\n    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.4);\n    cursor: pointer;\n  }\n`;\n\nconst ModalInner = styled.div`\n  color: white;\n  background: rgba(210, 35, 35, 0.9);\n  height: 200px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  font-size: 80px;\n  font-weight: 900;\n  font-style: italic;\n  box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.3);\n  letter-spacing: 3px;\n`;\n\nconst BtnWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Wrap = styled.div`\n  display: flex;\n`;\n\nconst StepsWrap = styled.div`\n  margin-left: 20px;\n  font-size: 20px;\n  text-align: center;\n  h1 {\n    margin: 20px 0px;\n  }\n  ul {\n    max-height: 580px;\n    display: flex;\n    flex-wrap: wrap;\n    flex-direction: column;\n  }\n  li {\n    background: rgba(255, 255, 255, 0.3);\n    color: #a57000;\n    font-weight: 900;\n    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);\n    padding: 2px;\n    font-size: 15px;\n    margin: 5px;\n    width: 30px;\n    height: 20px;\n    cursor: pointer;\n  }\n  li:last-child {\n    background: rgba(255, 255, 255, 0.8);\n  }\n`;\n\nconst BoardWrap = styled.div`\n  width: 570px;\n  height: 570px;\n  background: white;\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.4);\n  display: flex;\n  align-content: flex-start;\n  flex-wrap: wrap;\n  position: relative;\n  box-sizing: border-box;\n  &:after {\n    content: \"\";\n    position: absolute;\n    left: 0px;\n    top: 0px;\n    width: 570px;\n    height: 570px;\n    border: solid 15px #666;\n    z-index: 1;\n  }\n`;\n\nconst Row = styled.div`\n  display: flex;\n`;\n\nconst NxtPlayer = styled.div`\n  text-align: center;\n  font-size: 15px;\n  letter-spacing: 2px;\n  .player {\n    font-size: 23px;\n    line-height: 35px;\n    font-weight: 900;\n  }\n`;\n\nconst Player = ({ children }) => {\n  return (\n    <NxtPlayer>\n      <span>下一位玩家</span>\n      <div className=\"player\">{children}</div>\n    </NxtPlayer>\n  );\n};\n\nfunction App() {\n  const SIZE = 19;\n  const [board, setBoard] = useState(Array(SIZE).fill(Array(SIZE).fill(null)));\n\n  const isBlackMoving = useRef(true);\n\n  const [history, setHistory] = useState([null]);\n\n  const lastRow = useRef();\n  const lastCol = useRef();\n\n  const updateBoard = useCallback((y, x, newValue) => {\n    setBoard((board) =>\n      board.map((row, currentY) => {\n        // 如果這一個橫排不是我要改的，直接回傳即可\n        if (currentY !== y) return row;\n\n        // 如果是的話，找到我要改的那個 x 的位置\n        return row.map((col, currentX) => {\n          if (currentX !== x) return col;\n          return newValue;\n        });\n      })\n    );\n  }, []);\n\n  const handleChessClick = useCallback(\n    (row, col, value) => {\n      // 已經下過了\n      if (value !== null) return;\n\n      lastRow.current = row;\n      lastCol.current = col;\n      updateBoard(row, col, isBlackMoving.current ? \"black\" : \"white\");\n      isBlackMoving.current = !isBlackMoving.current;\n      setHistory(history.concat([{ board }]));\n    },\n    [updateBoard, history]\n  );\n\n  const handleRestartClick = () => {\n    window.location.reload();\n  };\n\n  const handleStepClick = (step) => {\n    if (step == history.length - 1) return;\n    if (step % 2 === 0) {\n      isBlackMoving.current = true;\n    } else {\n      isBlackMoving.current = false;\n    }\n    console.log(isBlackMoving);\n    setHistory(history.slice(0, step + 1));\n    setBoard(history[step + 1].board);\n    console.log(history.length);\n  };\n\n  const handlePreviousClick = () => {\n    setHistory(history.slice(0, history.length - 1));\n    setBoard(history[history.length - 1].board);\n    isBlackMoving.current = !isBlackMoving.current;\n  };\n\n  const [wineer, setWineer] = useState();\n  useEffect(() => {\n    if (lastRow.current === undefined || lastCol.current === undefined) return;\n    setWineer(findWinner(board, lastRow.current, lastCol.current));\n  }, [board]);\n\n  return (\n    <>\n      {wineer && (\n        <WinnerModal>\n          <ModalInner>\n            {wineer === \"draw\" && \"平手\"}\n            {wineer === \"black\" && \"獲勝的是黑子\"}\n            {wineer === \"white\" && \"獲勝的是白子\"}\n            <br />\n            <button onClick={handleRestartClick}>再玩一次</button>\n          </ModalInner>\n        </WinnerModal>\n      )}\n      <Wrap>\n        <mainWrap>\n          <BtnWrap>\n            <Button onClick={handlePreviousClick}>上一步</Button>\n            <Player>{isBlackMoving.current ? \"黑子\" : \"白子\"}</Player>\n            <Button onClick={handleRestartClick}>開新局</Button>\n          </BtnWrap>\n          <BoardWrap>\n            {board.map((row, rowIndex) => {\n              return (\n                <Row key={rowIndex}>\n                  {row.map((col, colIndex) => {\n                    return (\n                      <Chess\n                        key={colIndex}\n                        row={rowIndex}\n                        col={colIndex}\n                        value={board[rowIndex][colIndex]}\n                        onClick={handleChessClick}\n                      />\n                    );\n                  })}\n                </Row>\n              );\n            })}\n          </BoardWrap>\n        </mainWrap>\n        <StepsWrap>\n          <h1>步數</h1>\n          <ul>\n            {history.map(\n              (steps, indexMove) =>\n                indexMove !== 0 && (\n                  <li\n                    key={indexMove}\n                    onClick={() => handleStepClick(indexMove)}\n                  >\n                    {indexMove}\n                  </li>\n                )\n            )}\n          </ul>\n        </StepsWrap>\n      </Wrap>\n    </>\n  );\n}\n\nexport default App;\n","/Users/sage/Desktop/五子棋/src/Chess.js",[],"/Users/sage/Desktop/五子棋/src/Button.js",[],"/Users/sage/Desktop/五子棋/src/utils.js",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":170,"column":5,"nodeType":"38","endLine":170,"endColumn":27,"suggestions":"39"},{"ruleId":"40","severity":1,"message":"41","line":178,"column":14,"nodeType":"42","messageId":"43","endLine":178,"endColumn":16},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'board'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setHistory' needs the current value of 'board'.","ArrayExpression",["46"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"47","fix":"48"},"Update the dependencies array to be: [updateBoard, history, board]",{"range":"49","text":"50"},[3534,3556],"[updateBoard, history, board]"]